{"ast":null,"code":"var _jsxFileName = \"/Users/retanal/Documents/csi2132_website/airbnb/src/component/PrivateRoute/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component,\n  isSignedIn,\n  ...rest\n}) => {\n  console.log('Signed: ' + isSignedIn);\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => isSignedIn ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/retanal/Documents/csi2132_website/airbnb/src/component/PrivateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","isSignedIn","rest","console","log","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAD,KAAmD;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,UAAzB;AACA,SACC,oBAAC,KAAD,oBACKC,IADL;AAEC,IAAA,MAAM,EAAEG,KAAK,IACZJ,UAAU,GACT,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADS,GAGT,oBAAC,QAAD;AACC,MAAA,EAAE,EAAE;AACHC,QAAAA,QAAQ,EAAE,QADP;AAEHC,QAAAA,KAAK,EAAE;AACNC,UAAAA,IAAI,EACHH,KAAK,CAACI;AAFD;AAFJ,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAoBA,CAtBD;;AAwBA,eAAeX,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, isSignedIn, ...rest }) => {\n\tconsole.log('Signed: ' + isSignedIn);\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={props =>\n\t\t\t\tisSignedIn ? (\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t) : (\n\t\t\t\t\t<Redirect\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/login',\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tfrom:\n\t\t\t\t\t\t\t\t\tprops.location\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}