{"ast":null,"code":"var _jsxFileName = \"/Users/retanal/Documents/airbnb/src/component/NavBar/OutsideAlerter.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n/**\n * Component that alerts if you click outside of it\n */\n\nexport default class OutsideAlerter extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  /**\n   * Set the wrapper ref\n   */\n\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\n   * Alert if clicked on outside of element\n   */\n\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      alert('You clicked outside of me!');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.setWrapperRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nOutsideAlerter.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/Users/retanal/Documents/airbnb/src/component/NavBar/OutsideAlerter.js"],"names":["React","Component","PropTypes","OutsideAlerter","constructor","props","setWrapperRef","bind","handleClickOutside","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","node","wrapperRef","event","contains","target","alert","render","children","propTypes","element","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;;;AAGA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACrDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA;;AAEDE,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKH,kBAA5C;AACA;;AAEDI,EAAAA,oBAAoB,GAAG;AACtBF,IAAAA,QAAQ,CAACG,mBAAT,CACC,WADD,EAEC,KAAKL,kBAFN;AAIA;AAED;;;;;AAGAF,EAAAA,aAAa,CAACQ,IAAD,EAAO;AACnB,SAAKC,UAAL,GAAkBD,IAAlB;AACA;AAED;;;;;AAGAN,EAAAA,kBAAkB,CAACQ,KAAD,EAAQ;AACzB,QACC,KAAKD,UAAL,IACA,CAAC,KAAKA,UAAL,CAAgBE,QAAhB,CAAyBD,KAAK,CAACE,MAA/B,CAFF,EAGE;AACDC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,GAAG,EAAE,KAAKd,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKD,KAAL,CAAWgB,QADb,CADD;AAKA;;AA5CoD;AA+CtDlB,cAAc,CAACmB,SAAf,GAA2B;AAC1BD,EAAAA,QAAQ,EAAEnB,SAAS,CAACqB,OAAV,CAAkBC;AADF,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Component that alerts if you click outside of it\n */\nexport default class OutsideAlerter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.setWrapperRef = this.setWrapperRef.bind(this);\n\t\tthis.handleClickOutside = this.handleClickOutside.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener('mousedown', this.handleClickOutside);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\n\t\t\t'mousedown',\n\t\t\tthis.handleClickOutside\n\t\t);\n\t}\n\n\t/**\n\t * Set the wrapper ref\n\t */\n\tsetWrapperRef(node) {\n\t\tthis.wrapperRef = node;\n\t}\n\n\t/**\n\t * Alert if clicked on outside of element\n\t */\n\thandleClickOutside(event) {\n\t\tif (\n\t\t\tthis.wrapperRef &&\n\t\t\t!this.wrapperRef.contains(event.target)\n\t\t) {\n\t\t\talert('You clicked outside of me!');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.setWrapperRef}>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nOutsideAlerter.propTypes = {\n\tchildren: PropTypes.element.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}